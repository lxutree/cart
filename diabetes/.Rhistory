table(data$AuthorID)
data = read.csv("../Downloads/Direct Messages - Private - Vi [860192840457519114].csv")
data$AuthorID = factor(x = data$AuthorID, levels = unique(data$AuthorID), labels = c("babe", "me"))
data$content_sting = as.character(data$Content)
data$nchar = nchar(data$content_sting)
temp = split(data, data$AuthorID)
sapply(temp, function(x){mean(x$nchar)})
table(data$AuthorID)
data$Date[1]-data$Date[2]
data$Reactions
today()
now()
ymd("2017-01-31")
data$Date[1]
library(tidyverse)
data$Date[1]
today()
data = read.csv("../Downloads/Direct Messages - Private - Vi [860192840457519114].csv")
data$AuthorID = factor(x = data$AuthorID, levels = unique(data$AuthorID), labels = c("babe", "me"))
data$content_sting = as.character(data$Content)
data$nchar = nchar(data$content_sting)
temp = split(data, data$AuthorID)
sapply(temp, function(x){mean(x$nchar)})
table(data$AuthorID)
library(lme4)
install.packages("caret")
install.packages("ggplot2")
install.packages("stringr")
install.packages("rpart")
# working directory
setwd("~/../LX_Project/cart/diabetes/")
library(stringr)
library(ggplot2)
library(rpart)
source("../class.R") # load cart function
## read data:
data = read.csv(file = "diabetic_data.csv")
## exclusions
# 1. only keep first obs from the same patient (with the same unique_id)
unique_id = sapply(unique(data$patient_nbr), FUN = function(x){
which(data$patient_nbr == x)[1]
})
data = data[unique_id, ]
# delete encounter_id now
data$encounter_id <- NULL
# 2. remove patients that entered hospice or passed away after discharge
data = data[ -which(data$discharge_disposition_id %in% c(11, 13, 14, 19, 20, 21)), ]
# check missing data:
apply(data, MARGIN = 2, FUN = function(x){length(which(x == "?"))})
# 'medical_specialty', 'weight' and 'payer_code' have lots of missing data
# remove the variables 'weight' and 'payer_code'
data$weight <- NULL
data$payer_code <- NULL
nrow(data)
# 69973, which is 11 less than the value reported in the paper (69984)
# re-coding some of the variables:
data$readmitted = as.factor(ifelse(data$readmitted == "<30", "YES", "NO"))
data$A1Cresult = as.factor(ifelse(data$A1Cresult %in% c("Norm", ">7"), "Normal", ifelse(data$A1Cresult == "None", "None", ifelse(data$change == "Ch", "high_ch", "high_noch"))))
data$discharge_disposition_id = as.factor(ifelse(data$discharge_disposition_id == 1, "Home", "Other"))
data$admission_source_id = as.factor(ifelse(data$admission_source_id == 7, "Emergency", ifelse(data$admission_source_id %in% c(1,2), "Referral", "Other")))
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Cardiology-Pediatric", "Cardiology")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgeon", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Cardiovascular/Thoracic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Colon&Rectal", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-General", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Maxillofacial", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Neuro", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Pediatric", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Plastic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-PlasticwithinHeadandNeck", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Thoracic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Vascular", "SurgicalSpecialty")
data$medical_specialty <- str_replace(data$medical_specialty, "SurgicalSpecialty", "Surgery")
data$medical_specialty[which(data$medical_specialty == "?")] = "Missing or Unknown"
data$medical_specialty[which(!(data$medical_specialty %in% c("InternalMedicine", "Cardiology", "Surgery", "Family/GeneralPractice", "Missing or Unknown")))] = "Other"
diag_diabetes = levels(data$diag_1)[which(substr(levels(data$diag_1), 1, 3)==250)]
diag_other = levels(data$diag_1)[which(!(levels(data$diag_1) %in% c(390:459, 785, diag_diabetes, 460:519, 786, 520:579, 787, 800:999, 710:739, 580:629, 788, 140:239)))]
levels(data$diag_1) <- list(
"Circulatory" = c(390:459, 785),
"Diabetes" = diag_diabetes,
"Respiratory" = c(460:519, 786),
"Digestive" = c(520:579, 787),
"Injury and poisoning" = c(800:999),
"Musculoskeletal" = c(710:739),
"Genitourinary" = c(580:629, 788),
"Neoplasms" = c(140:239),
"Other" = diag_other
)
levels(data$race) = list("Missing" = "?", "Other" = c("Other", "Asian", "Hispanic"), "African American" = "AfricanAmerican", "Caucasian" = "Caucasian" )
data$age_num = data$age
levels(data$age_num) = list("5" = "[0-10)", "15" = "[10-20)", "25" = "[20-30)", "35" = "[30-40)", "45" = "[40-50)", "55" = "[50-60)", "65" = "[60-70)", "75" = "[70-80)", "85" = "[80-90)", "95" = "[90-100)")
data$age_num = as.numeric(as.character(data$age_num))
levels(data$age) = list("< 30" = c("[0-10)", "[10-20)", "[20-30)" ), "[30, 60)" = c("[30-40)", "[40-50)", "[50-60)"), "[60, 100) " = c("[60-70)", "[70-80)", "[80-90)", "[90-100)"))
data$medical_specialty <- as.factor(data$medical_specialty)
data$medical_specialty <-droplevels(data$medical_specialty)
# change the baseline level for some factors:
data$race = relevel(data$race, ref = "African American")
data$age = relevel(data$age, ref = "[30, 60)")
data$diag_1 = relevel(data$diag_1, ref = "Diabetes")
data$A1Cresult =  relevel(data$A1Cresult, ref = "None")
# tables:
HbA1c = as.data.frame(cbind("HbA1c", levels(data$A1Cresult), table(data$A1Cresult),  (table(data$A1Cresult))/nrow(data), table(data$A1Cresult, data$readmitted)[, 2], table(data$A1Cresult, data$readmitted)[, 2]/table(data$A1Cresult)))
gender = as.data.frame(cbind("gender", levels(data$gender), table(data$gender),  (table(data$gender))/nrow(data), table(data$gender, data$readmitted)[, 2], table(data$gender, data$readmitted)[, 2]/table(data$gender)))
discharge = as.data.frame(cbind("discharge", levels(data$discharge_disposition_id), table(data$discharge_disposition_id),  (table(data$discharge_disposition_id))/nrow(data), table(data$discharge_disposition_id, data$readmitted)[, 2], table(data$discharge_disposition_id, data$readmitted)[, 2]/table(data$discharge_disposition_id)))
admission = as.data.frame(cbind("admission", levels(data$admission_source_id), table(data$admission_source_id),  (table(data$admission_source_id))/nrow(data), table(data$admission_source_id, data$readmitted)[, 2], table(data$admission_source_id, data$readmitted)[, 2]/table(data$admission_source_id)))
specialty = as.data.frame(cbind("specialty", levels(data$medical_specialty), table(data$medical_specialty),  (table(data$medical_specialty))/nrow(data), table(data$medical_specialty, data$readmitted)[, 2], table(data$medical_specialty, data$readmitted)[, 2]/table(data$medical_specialty)))
diagnosis = as.data.frame(cbind("diagnosis", levels(data$diag_1), table(data$diag_1),  (table(data$diag_1))/nrow(data), table(data$diag_1, data$readmitted)[, 2], table(data$diag_1, data$readmitted)[, 2]/table(data$diag_1)))
race = as.data.frame(cbind("race", levels(data$race), table(data$race),  (table(data$race))/nrow(data), table(data$race, data$readmitted)[, 2], table(data$race, data$readmitted)[, 2]/table(data$race)))
age = as.data.frame(cbind("age", levels(data$age), table(data$age),  (table(data$age))/nrow(data), table(data$age, data$readmitted)[, 2], table(data$age, data$readmitted)[, 2]/table(data$age)))
summarytable = rbind(HbA1c, gender, discharge, admission, specialty, diagnosis, race, age)
names(summarytable) = c("Variable", "Level", "# of encounters", "% of population", "# of encounters (readmitted)", "% in group (readmitted)")
row.names(summarytable) = NULL
summarytable$`% of population` = as.numeric(as.character(summarytable$`% of population`))
summarytable$`% in group (readmitted)` = as.numeric(as.character(summarytable$`% in group (readmitted)`))
summarytable$`% of population` = round((summarytable$`% of population`)* 100, digits = 2)
summarytable$`% in group (readmitted)` = round((summarytable$`% in group (readmitted)`)* 100, digits = 2)
summarytable
mean(data$age_num)
quantile(data$age_num, probs = c(0.5, 0.25, 0.75))
mean(data$time_in_hospital)
quantile(data$time_in_hospital, probs = c(0.5, 0.25, 0.75))
data = data[unique_id, ]
# delete encounter_id now
data$encounter_id <- NULL
# 2. remove patients that entered hospice or passed away after discharge
data = data[ -which(data$discharge_disposition_id %in% c(11, 13, 14, 19, 20, 21)), ]
# check missing data:
apply(data, MARGIN = 2, FUN = function(x){length(which(x == "?"))})
# remove the variables 'weight' and 'payer_code'
data$weight <- NULL
data$payer_code <- NULL
nrow(data)
# re-coding some of the variables:
data$readmitted = as.factor(ifelse(data$readmitted == "<30", "YES", "NO"))
data$A1Cresult = as.factor(ifelse(data$A1Cresult %in% c("Norm", ">7"), "Normal", ifelse(data$A1Cresult == "None", "None", ifelse(data$change == "Ch", "high_ch", "high_noch"))))
data$discharge_disposition_id = as.factor(ifelse(data$discharge_disposition_id == 1, "Home", "Other"))
data$admission_source_id = as.factor(ifelse(data$admission_source_id == 7, "Emergency", ifelse(data$admission_source_id %in% c(1,2), "Referral", "Other")))
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Cardiology-Pediatric", "Cardiology")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgeon", "SurgicalSpecialty")
data$medical_specialty
## read data:
data = read.csv(file = "diabetic_data.csv")
data = data[unique_id, ]
# delete encounter_id now
data$encounter_id <- NULL
# 2. remove patients that entered hospice or passed away after discharge
data = data[ -which(data$discharge_disposition_id %in% c(11, 13, 14, 19, 20, 21)), ]
# check missing data:
apply(data, MARGIN = 2, FUN = function(x){length(which(x == "?"))})
# remove the variables 'weight' and 'payer_code'
data$weight <- NULL
data$payer_code <- NULL
nrow(data)
# re-coding some of the variables:
data$readmitted = as.factor(ifelse(data$readmitted == "<30", "YES", "NO"))
data$A1Cresult = as.factor(ifelse(data$A1Cresult %in% c("Norm", ">7"), "Normal", ifelse(data$A1Cresult == "None", "None", ifelse(data$change == "Ch", "high_ch", "high_noch"))))
data$discharge_disposition_id = as.factor(ifelse(data$discharge_disposition_id == 1, "Home", "Other"))
data$admission_source_id = as.factor(ifelse(data$admission_source_id == 7, "Emergency", ifelse(data$admission_source_id %in% c(1,2), "Referral", "Other")))
data$admission_source_id
data$medical_specialty
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Cardiology-Pediatric", "Cardiology")
data$medical_specialty
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgeon", "SurgicalSpecialty")
data$medical_specialty
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Cardiovascular/Thoracic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Colon&Rectal", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-General", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Maxillofacial", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Neuro", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Pediatric", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Plastic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-PlasticwithinHeadandNeck", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Thoracic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Vascular", "SurgicalSpecialty")
data$medical_specialty <- str_replace(data$medical_specialty, "SurgicalSpecialty", "Surgery")
data$medical_specialty[which(data$medical_specialty == "?")] = "Missing or Unknown"
data$medical_specialty[which(!(data$medical_specialty %in% c("InternalMedicine", "Cardiology", "Surgery", "Family/GeneralPractice", "Missing or Unknown")))] = "Other"
diag_diabetes = levels(data$diag_1)[which(substr(levels(data$diag_1), 1, 3)==250)]
diag_other = levels(data$diag_1)[which(!(levels(data$diag_1) %in% c(390:459, 785, diag_diabetes, 460:519, 786, 520:579, 787, 800:999, 710:739, 580:629, 788, 140:239)))]
levels(data$diag_1) <- list(
"Circulatory" = c(390:459, 785),
"Diabetes" = diag_diabetes,
"Respiratory" = c(460:519, 786),
"Digestive" = c(520:579, 787),
"Injury and poisoning" = c(800:999),
"Musculoskeletal" = c(710:739),
"Genitourinary" = c(580:629, 788),
"Neoplasms" = c(140:239),
"Other" = diag_other
)
diag_other
diag_diabetes
data$diag_1
## read data:
data = read.csv(file = "diabetic_data.csv")
data$diag_1
## read data:
data = read.csv(file = "diabetic_data.csv", stringsAsFactors = TRUE)
## exclusions
# 1. only keep first obs from the same patient (with the same unique_id)
unique_id = sapply(unique(data$patient_nbr), FUN = function(x){
which(data$patient_nbr == x)[1]
})
data = data[unique_id, ]
# delete encounter_id now
data$encounter_id <- NULL
# 2. remove patients that entered hospice or passed away after discharge
data = data[ -which(data$discharge_disposition_id %in% c(11, 13, 14, 19, 20, 21)), ]
# check missing data:
apply(data, MARGIN = 2, FUN = function(x){length(which(x == "?"))})
# remove the variables 'weight' and 'payer_code'
data$weight <- NULL
data$payer_code <- NULL
nrow(data)
# re-coding some of the variables:
data$readmitted = as.factor(ifelse(data$readmitted == "<30", "YES", "NO"))
data$A1Cresult = as.factor(ifelse(data$A1Cresult %in% c("Norm", ">7"), "Normal", ifelse(data$A1Cresult == "None", "None", ifelse(data$change == "Ch", "high_ch", "high_noch"))))
data$discharge_disposition_id = as.factor(ifelse(data$discharge_disposition_id == 1, "Home", "Other"))
data$admission_source_id = as.factor(ifelse(data$admission_source_id == 7, "Emergency", ifelse(data$admission_source_id %in% c(1,2), "Referral", "Other")))
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Cardiology-Pediatric", "Cardiology")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgeon", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Cardiovascular/Thoracic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Colon&Rectal", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-General", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Maxillofacial", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Neuro", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Pediatric", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Plastic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-PlasticwithinHeadandNeck", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Thoracic", "SurgicalSpecialty")
data$medical_specialty <- replace(data$medical_specialty, data$medical_specialty == "Surgery-Vascular", "SurgicalSpecialty")
data$medical_specialty <- str_replace(data$medical_specialty, "SurgicalSpecialty", "Surgery")
data$medical_specialty[which(data$medical_specialty == "?")] = "Missing or Unknown"
data$medical_specialty[which(!(data$medical_specialty %in% c("InternalMedicine", "Cardiology", "Surgery", "Family/GeneralPractice", "Missing or Unknown")))] = "Other"
diag_diabetes = levels(data$diag_1)[which(substr(levels(data$diag_1), 1, 3)==250)]
diag_other = levels(data$diag_1)[which(!(levels(data$diag_1) %in% c(390:459, 785, diag_diabetes, 460:519, 786, 520:579, 787, 800:999, 710:739, 580:629, 788, 140:239)))]
levels(data$diag_1) <- list(
"Circulatory" = c(390:459, 785),
"Diabetes" = diag_diabetes,
"Respiratory" = c(460:519, 786),
"Digestive" = c(520:579, 787),
"Injury and poisoning" = c(800:999),
"Musculoskeletal" = c(710:739),
"Genitourinary" = c(580:629, 788),
"Neoplasms" = c(140:239),
"Other" = diag_other
)
data$diag_1
levels(data$race) = list("Missing" = "?", "Other" = c("Other", "Asian", "Hispanic"), "African American" = "AfricanAmerican", "Caucasian" = "Caucasian" )
data$age_num = data$age
levels(data$age_num) = list("5" = "[0-10)", "15" = "[10-20)", "25" = "[20-30)", "35" = "[30-40)", "45" = "[40-50)", "55" = "[50-60)", "65" = "[60-70)", "75" = "[70-80)", "85" = "[80-90)", "95" = "[90-100)")
data$age_num = as.numeric(as.character(data$age_num))
levels(data$age) = list("< 30" = c("[0-10)", "[10-20)", "[20-30)" ), "[30, 60)" = c("[30-40)", "[40-50)", "[50-60)"), "[60, 100) " = c("[60-70)", "[70-80)", "[80-90)", "[90-100)"))
data$medical_specialty <- as.factor(data$medical_specialty)
data$medical_specialty <-droplevels(data$medical_specialty)
# change the baseline level for some factors:
data$race = relevel(data$race, ref = "African American")
data$age = relevel(data$age, ref = "[30, 60)")
data$diag_1 = relevel(data$diag_1, ref = "Diabetes")
data$A1Cresult =  relevel(data$A1Cresult, ref = "None")
# tables:
HbA1c = as.data.frame(cbind("HbA1c", levels(data$A1Cresult), table(data$A1Cresult),  (table(data$A1Cresult))/nrow(data), table(data$A1Cresult, data$readmitted)[, 2], table(data$A1Cresult, data$readmitted)[, 2]/table(data$A1Cresult)))
gender = as.data.frame(cbind("gender", levels(data$gender), table(data$gender),  (table(data$gender))/nrow(data), table(data$gender, data$readmitted)[, 2], table(data$gender, data$readmitted)[, 2]/table(data$gender)))
discharge = as.data.frame(cbind("discharge", levels(data$discharge_disposition_id), table(data$discharge_disposition_id),  (table(data$discharge_disposition_id))/nrow(data), table(data$discharge_disposition_id, data$readmitted)[, 2], table(data$discharge_disposition_id, data$readmitted)[, 2]/table(data$discharge_disposition_id)))
admission = as.data.frame(cbind("admission", levels(data$admission_source_id), table(data$admission_source_id),  (table(data$admission_source_id))/nrow(data), table(data$admission_source_id, data$readmitted)[, 2], table(data$admission_source_id, data$readmitted)[, 2]/table(data$admission_source_id)))
specialty = as.data.frame(cbind("specialty", levels(data$medical_specialty), table(data$medical_specialty),  (table(data$medical_specialty))/nrow(data), table(data$medical_specialty, data$readmitted)[, 2], table(data$medical_specialty, data$readmitted)[, 2]/table(data$medical_specialty)))
diagnosis = as.data.frame(cbind("diagnosis", levels(data$diag_1), table(data$diag_1),  (table(data$diag_1))/nrow(data), table(data$diag_1, data$readmitted)[, 2], table(data$diag_1, data$readmitted)[, 2]/table(data$diag_1)))
race = as.data.frame(cbind("race", levels(data$race), table(data$race),  (table(data$race))/nrow(data), table(data$race, data$readmitted)[, 2], table(data$race, data$readmitted)[, 2]/table(data$race)))
age = as.data.frame(cbind("age", levels(data$age), table(data$age),  (table(data$age))/nrow(data), table(data$age, data$readmitted)[, 2], table(data$age, data$readmitted)[, 2]/table(data$age)))
summarytable = rbind(HbA1c, gender, discharge, admission, specialty, diagnosis, race, age)
names(summarytable) = c("Variable", "Level", "# of encounters", "% of population", "# of encounters (readmitted)", "% in group (readmitted)")
row.names(summarytable) = NULL
summarytable$`% of population` = as.numeric(as.character(summarytable$`% of population`))
summarytable$`% in group (readmitted)` = as.numeric(as.character(summarytable$`% in group (readmitted)`))
summarytable$`% of population` = round((summarytable$`% of population`)* 100, digits = 2)
summarytable$`% in group (readmitted)` = round((summarytable$`% in group (readmitted)`)* 100, digits = 2)
summarytable
mean(data$age_num)
quantile(data$age_num, probs = c(0.5, 0.25, 0.75))
mean(data$time_in_hospital)
quantile(data$time_in_hospital, probs = c(0.5, 0.25, 0.75))
mean(data$time_in_hospital)
quantile(data$time_in_hospital, probs = c(0.5, 0.25, 0.75))
fit_full = glm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, family = "binomial", data = data)
summary(fit_full)
library(caret)
trCntl <- trainControl(method = "CV",number = 10)
trCntl
logitMod_CV <- train(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1,
data = data, trControl = trCntl, method = "glm", family = "binomial")
logit_pred_CV <- predict(logitMod_CV, testing)
set.seed(123)
indices = sample(1:nrow(data), size = round(nrow(data)/5))
data_val = data[indices, ]
data_train = data[-indices, ]
trCntl <- trainControl(method = "CV",number = 10)
logitMod_CV <- train(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1,
data = data, trControl = data_train, method = "glm", family = "binomial")
logitMod_CV <- train(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1,
data = data_train, trControl = trCntl, method = "glm", family = "binomial")
logit_pred_CV <- predict(logitMod_CV, data_val)
confusionMatrix(logit_pred_CV, data_val$readmitted)
logit_pred_CV
data_val
?trainControl
?train
logitMod_CV
nrow(data_train)
confusionMatrix(logit_pred_CV, data_val$readmitted)
fit_CV <- train(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1,
data = data_train, trControl = trCntl, method = "glm", family = "binomial")
pred_CV <- predict(fit_CV, data_val)
pred_CV <- predict(fit_CV, data_val)
mean((pred_CV - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
pred_CV
brierScore <- mean((ifelse(pred_CV == "NO", 0 , 1)  - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
brierScore
fit_null_CV <- train(readmitted ~ 1,
data = data_train, trControl = trCntl, method = "glm", family = "binomial")
library(rms)
install.packages("rms")
library(rms)
fit2 = lrm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, data = data)
fit2$stats["R2"]
fit2$stats
brierScore
fit_null_CV <- train(readmitted ~ 1,
data = data_train, trControl = trCntl, method = "glm", family = "binomial")
pred_CV <- predict(fit_CV, data_val)
fitnull = glm(readmitted ~ 1, family = "binomial", data = data)
prednull <- predict(fitnull,type='response')
brierScore_null <- mean((prednull - ifelse(data$readmitted == "NO", 0 , 1))^2)
pred <- predict(fit,type='response')
brierScore <- mean((pred - ifelse(data$readmitted == "NO", 0 , 1))^2)
install.packages("lme4")
library(lme4)
fitnull = glm(readmitted ~ 1, family = "binomial", data = data)
prednull <- predict(fitnull,type='response')
brierScore_null <- mean((prednull - ifelse(data$readmitted == "NO", 0 , 1))^2)
pred <- predict(fit,type='response')
brierScore <- mean((pred - ifelse(data$readmitted == "NO", 0 , 1))^2)
brierScore <- mean((pred - ifelse(data$readmitted == "NO", 0 , 1))^2)
mean((pred - ifelse(data$readmitted == "NO", 0 , 1))^2)
pred
ifelse(data$readmitted == "NO", 0 , 1)
set.seed(123)
indices = sample(1:nrow(data), size = round(nrow(data)/5))
data_val = data[indices, ]
data_train = data[-indices, ]
fitnull = glm(readmitted ~ 1, family = "binomial", data = data_train)
prednull <- predict(fitnull,data_val)
prednull
prednull <- predict(fitnull, data_val, type = "response")
prednull
fitnull = glm(readmitted ~ 1, family = "binomial", data = data_train)
prednull <- predict(fitnull, data_val, type = "response")
brierScore_null <- mean((prednull - ifelse(data$readmitted == "NO", 0 , 1))^2)
brierScore_null <- mean((prednull - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
brierScore_null
fit = glm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, family = "binomial", data = data_train)
pred <- predict(fit, data_val, type='response')
brierScore <- mean((pred - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
brierScore
print(c(brierScore, brierScore_null))
fit2 = lrm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, data = data)
fit2$stats
fit2
fit = glm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, family = "binomial", data = data)
pred <- predict(fit, type='response')
brierScore <- mean((pred - ifelse(data$readmitted == "NO", 0 , 1))^2)
brierScore
fitnull = glm(readmitted ~ 1, family = "binomial", data = data)
prednull <- predict(fitnull, type = "response")
brierScore_null <- mean((prednull - ifelse(data$readmitted == "NO", 0 , 1))^2)
brierScore_null
fitnull = glm(readmitted ~ 1, family = "binomial", data = data_train)
prednull <- predict(fitnull, data_val, type = "response")
brierScore_null <- mean((prednull - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
fit = glm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, family = "binomial", data = data_train)
pred <- predict(fit, data_val, type='response')
brierScore <- mean((pred - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
print(c(brierScore, brierScore_null))
confusionMatrix(logit_pred_CV, data_val$readmitted)
library(pROC)
roc_plot <- roc(data_val$readmitted, pred_CV,
# arguments for ci
ci=TRUE)
pred_CV
data_val$readmitted
pred_CV
pred_CV <- predict(fit_CV, data_val, type = "response")
roc_plot <- roc(data_val$readmitted, pred_CV,
# arguments for ci
ci=TRUE)
roc_plot
roc_plot <- roc(data_val$readmitted, pred_CV,
# arguments for ci
ci=TRUE)
pred_CV
pred_CV <- predict(fit_CV, data_val, type = "response")
pred_CV <- predict(fit_CV, data_val, type = "prob")
fitnull = glm(readmitted ~ 1, family = "binomial", data = data_train)
prednull <- predict(fitnull, data_val, type = "prob")
brierScore_null <- mean((prednull - ifelse(data_val$readmitted == "NO", 0 , 1))^2)
fit = glm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, family = "binomial", data = data_train)
pred_CV <- predict(fit_CV, data_val, type = "prob")
pred_CV
roc_plot <- roc(data_val$readmitted, pred_CV,
# arguments for ci
ci=TRUE)
roc_plot <- roc(data_val$readmitted, pred_CV$YES,
# arguments for ci
ci=TRUE)
roc_plot
roc_plot
roc_plot <- roc(data_val$readmitted, pred_CV$YES,
# arguments for ci
ci=TRUE)
roc_plot
library(pROC)
roc_plot <- roc(data_val$readmitted, pred_CV$YES,
# arguments for ci
ci=TRUE)
roc_plot
roc(data_val$readmitted, pred_CV$YES,
# arguments for ci
ci=TRUE)
roc_plot <- roc(data_val$readmitted, pred_CV$YES,
# arguments for ci
ci=TRUE, plot = TRUE)
roc_plot <- roc(data_val$readmitted, pred_CV$YES,
# arguments for ci
ci=TRUE, plot = TRUE, auc = TRUE)
install.packages("gbm")
calibrate.plot
?```{r, echo=FALSE}
?calibrate.plot
library(gbm)
?calibrate.plot
confusionMatrix(pred_CV, data_val$readmitted)
confusionMatrix( predict(fit_CV, data_val), data_val$readmitted)
predict(fit_CV, data_val)
data_val$readmitted
predict(fit_CV, data_val, type = "prob")
lrm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, data = data_train)
fit_rms = lrm(readmitted ~ discharge_disposition_id + race + admission_source_id + medical_specialty + time_in_hospital + age + diag_1 + A1Cresult  +  diag_1 * discharge_disposition_id + race * discharge_disposition_id + medical_specialty*discharge_disposition_id + discharge_disposition_id*time_in_hospital + time_in_hospital*medical_specialty + age * medical_specialty + time_in_hospital*diag_1 + A1Cresult* diag_1, data = data_train)
fit_rms$stats
print(c(brierScore, brierScore_null))
fit_rms$stats["R2"]
tree1$var_rank
data_subset = data[, c("readmitted", 'discharge_disposition_id','race' , "admission_source_id" , "medical_specialty" , "time_in_hospital" , "age" , "diag_1" , "A1Cresult")]
tree1 = classtree(data = data_subset, resp = "readmitted", min.obs = 100)
tree1$var_rank
confusionMatrix(data = predict(predict(fit, data_val)))
confusionMatrix(data = predict(fit, data_val)))
confusionMatrix(data = predict(fit, data_val))
predict(fit, data_val)
predict(fit, data_val, type = "terms")
predict(fit, data_val, type = "response")
pred <- predict(fit, data_val, type='response')
plot(pred)
data$readmitted
confusionMatrix(data_val$readmitted, ifelse(pred<0.15, "NO", "YES"))
confusionMatrix(data_val$readmitted, as.factor(ifelse(pred<0.15, "NO", "YES")))
table(data_val$readmitted, as.factor(ifelse(pred<0.15, "NO", "YES")))
pred_outcome = as.factor(ifelse(pred<0.15, "NO", "YES"))
confmatrix = table(data_val$readmitted, pred_outcome)
confmatrix[1,1] = 'TN'
confmatrix[1,2] = 'FN'
confmatrix[2,1] = 'FP'
confmatrix[2,2] = 'TP'
confmatrix
confmatrix = table(data_val$readmitted, pred_outcome)
confmatrix
pred_outcome = as.factor(ifelse(pred<0.15, "NO", "YES"))
confmatrix = dummy = table(data_val$readmitted, pred_outcome)
dummy[1,1] = 'TN'
dummy[1,2] = 'FN'
dummy[2,1] = 'FP'
dummy[2,2] = 'TP'
print(c(confmatrix, dummy))
pred_outcome = as.factor(ifelse(pred<0.15, "NO", "YES"))
confmatrix = dummy = table(data_val$readmitted, pred_outcome)
dummy[1,1] = 'TN'
dummy[1,2] = 'FN'
dummy[2,1] = 'FP'
dummy[2,2] = 'TP'
print(list(confmatrix, dummy))
confmatrix = dummy = table(data_val$readmitted, pred_outcome,dnn = NULL)
confmatrix
confmatrix = dummy = table(data_val$readmitted, pred_outcome,dnn = NULL)
dummy[1,1] = 'TN'
dummy[1,2] = 'FN'
dummy[2,1] = 'FP'
dummy[2,2] = 'TP'
print(list(confmatrix, dummy))
dummy[1,1] = 'TN'
dummy[1,2] = 'FN'
dummy[2,1] = 'FP'
dummy[2,2] = 'TP'
dummy
12020+114 / (nrow(data_val))
(12020+114) / (nrow(data_val))
confmatrix
(751+1110   ) / (nrow(data_val))
(12020   ) / (1110    + 12020)
library(rms)
roc_plot <- roc(data_val$readmitted, pred,
# arguments for ci
ci=TRUE, plot = TRUE, auc = TRUE)
roc_plot
confusionMatrix( predict(fit_CV, data_val), data_val$readmitted)
