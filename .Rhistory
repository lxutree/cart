sd(data$resp_rate, na.rm = TRUE)
mean(data$cr_renal_fxn, na.rm = TRUE)
sd(data$cr_renal_fxn, na.rm = TRUE)
data$cr_renal_fxn
mean(data$egfr_renal, na.rm = TRUE)
sd(data$egfr_renal, na.rm = TRUE)
apply(data, 2, mean)
mean(data$hb_anemia, na.rm = TRUE)
sd(data$hb_anemia, na.rm = TRUE)
mean(data$na_sodium, na.rm = TRUE)
sd(data$na_sodium, na.rm = TRUE)
mean(data$k_potassium, na.rm = TRUE)
sd(data$k_potassium, na.rm = TRUE)
data$k_potassium
mean(data$k_potassium[-110], na.rm = TRUE)
sd(data$k_potassium, na.rm = TRUE)
mean(data$k_potassium[-110], na.rm = TRUE)
sd(data$k_potassium[-110], na.rm = TRUE)
mean(data$urea, na.rm = TRUE)
sd(data$urea, na.rm = TRUE)
data$urea
mean(data$glucose, na.rm = TRUE)
sd(data$glucose, na.rm = TRUE)
data$glucose
mean(data$bnp, na.rm = TRUE)
data$bnp
data$bnp[156]
data$bnp[156] = ""
data$bnp[156] = ""
data$bnp[157] = ""
data$bnp[168] = ""
data$bnp[179] = "846"
data$bnp[181] = "786"
data$bnp[182] = "149"
data$bnp[184] = "8055"
data$bnp[185] = "647"
data$bnp[192] = "11663"
data$bnp[242] = "28545"
data$bnp[281] = "595"
data$bnp
data$bnp = as.numeric(data$bnp)
mean(data$bnp, na.rm = TRUE)
sd(data$bnp, na.rm = TRUE)
data$bnp
sum(is.na(data$bnp))
mean(data$troponin, na.rm = TRUE)
sd(data$troponin, na.rm = TRUE)
data$troponin
unique(data$troponin)
sum(which(data$troponin == ""))
length(which(data$troponin == ""))
data$treatment_notes
data$prev_hf_hosp
unique(data$prev_hf_hosp)
which(data$prev_hf_hosp == "")
length(which(data$prev_hf_hosp == ""))
table(data$coronary_heart_disease)
table(data$coronary_heart_disease)/nrow(data)*100
table(data$previous_mi)
table(data$previous_mi)/nrow(data)*100
table(data$diabetes)
table(data$diabetes)
table(data$diabetes)/nrow(data)*100
table(data$hypertenison)
table(data$hypertenison)/nrow(data)*100
table(data$smoker)
table(data$smoker)/nrow(data)*100
table(data$copd)
table(data$copd)/nrow(data)*100
table(data$active_cancer)
table(data$active_cancer)/nrow(data)*100
table(data$acei_arb)
table(data$acei_arb)/nrow(data)*100
table(data$beta_blocker)
table(data$beta_blocker)/nrow(data)*100
100-table(data$beta_blocker)/nrow(data)*100
table(data$aldosterone_antag)
table(data$aldosterone_antag)/nrow(data)*100
data$bnp[156] = ""
table(data$diuretics)
table(data$diuretics)/nrow(data)*100
table(data$pulm_congestion)
table(data$pulm_congestion)/nrow(data)*100
table(data$pleural_effusion)
table(data$pleural_effusion)/nrow(data)*100
table(data$pre_eq5d_q1)
table(data$pre_eq5d_q1)/nrow(data)*100
data$pre_kccq_q1a
apply(is.na.data.frame(data),2, sum)
data$pre_healthcare_usage_q2
data$pre_healthcare_usage_q1
data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)]
which(data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)] == "")
length(data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)])
apply(is.na.data.frame(data),2, sum)
length(data$pre_healthcare_usage_q4[which(data$pre_healthcare_usage_q3 == 1)])
which(data$pre_healthcare_usage_q3 == 1)
length(data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)])
which(data$pre_healthcare_usage_q4[which(data$pre_healthcare_usage_q3 == 1)] == "")
length(data$pre_healthcare_usage_q6[which(data$pre_healthcare_usage_q5 == 1)])
which(data$pre_healthcare_usage_q6[which(data$pre_healthcare_usage_q5 == 1)] == "")
data$pre_healthcare_usage_q6[which(data$pre_healthcare_usage_q5 == 1)]
length(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)])
which(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)] == "")
which(data$pre_healthcare_usage_q6[which(data$pre_healthcare_usage_q5 == 1)] == "")
which(data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)] == "")
which(data$pre_healthcare_usage_q4[which(data$pre_healthcare_usage_q3 == 1)] == "")
which(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)] == "")
which(data$pre_healthcare_usage_q8b[which(data$pre_healthcare_usage_q7 == 1)] == "")
length(data$pre_healthcare_usage_q8b[which(data$pre_healthcare_usage_q7 == 1)])
length(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)])
data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)]
which(data$pre_healthcare_usage_q8c[which(data$pre_healthcare_usage_q7 == 1)] == "")
which(data$pre_healthcare_usage_q8d[which(data$pre_healthcare_usage_q7 == 1)] == "")
which(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)] == "")
length(which(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q7 == 1))
length(which(data$pre_healthcare_usage_q8b[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q8c[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q8d[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q9 == 1))
length(which(data$pre_healthcare_usage_q10[which(data$pre_healthcare_usage_q9 == 1)] == ""))
length(which(data$pre_healthcare_usage_q11 == 1))
length(which(data$pre_healthcare_usage_q11 == 1))
length(which(data$pre_healthcare_usage_q12a[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q12b[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q12c[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q12d[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q12e[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q12f[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q12g[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q13 == 1))
length(which(data$pre_healthcare_usage_q13 == 1))
length(which(data$pre_healthcare_usage_q14a[which(data$pre_healthcare_usage_q13 == 1)] == ""))
length(which(data$pre_healthcare_usage_q13 == 1))
length(which(data$pre_healthcare_usage_q14b[which(data$pre_healthcare_usage_q13 == 1)] == ""))
length(which(data$pre_healthcare_usage_q14c[which(data$pre_healthcare_usage_q13 == 1)] == ""))
length(which(data$pre_healthcare_usage_q14d[which(data$pre_healthcare_usage_q13 == 1)] == ""))
length(which(data$pre_healthcare_usage_q14e[which(data$pre_healthcare_usage_q13 == 1)] == ""))
length(which(data$pre_healthcare_usage_q14f[which(data$pre_healthcare_usage_q13 == 1)] == ""))
data = read.csv("../Downloads/baseline vars/datafile.csv")
is.na(data$sex)
sum(is.na(data$sex))
data$sex
data = read.csv("../Downloads/baseline vars/datafile.csv")
data = data[which(data$final_assignment != 2), ]
dim(data)
sum(is.na(data$sex))
data$sex
sum(is.na(data$mon_sex))
table(data$mon_sex)
71/375
table(data$mon_sex)/nrow(data)
sum(is.na(data$age))
72/375
mean(data$age, na.rm = TRUE)
sd(data$age, na.rm = TRUE)
length(which(data$prev_hf_hosp == ""))
data$prev_hf_hosp
c(140,182,120,135,104,104,105,111,135,96,76,84,75,75,88,89,201)
c(140,182,120,135,104,104,105,111,135,96,76,84,75,75,88,89,201)/375
data = read.csv("../Downloads/baseline vars/datafile.csv")
data = data[which(data$final_assignment != 2), ]
dim(data)
sum(is.na(data$age))
mean(data$age, na.rm = TRUE)
sd(data$age, na.rm = TRUE)
sum(is.na(data$mon_sex))
table(data$mon_sex)
table(data$mon_sex)/nrow(data)
table(data$redcap_data_access_group)
table(data$redcap_data_access_group)/nrow(data)
table(data$referral_source)
table(data$referral_source)/nrow(data)*100
table(data$sex)
table(data$sex)/nrow(data)*100
data$year_visit = as.numeric(substr(data$date_visit, 1, 4))
data$year_visit[90] = as.numeric(substr(data$date_discharged, 1, 4))[90]
mean(data$year_visit- data$year_of_birth)
sd(data$year_visit- data$year_of_birth)
table(data$pre_about_q3___1)
table(data$support_at_home)
table(data$support_at_home)/nrow(data)*100
table(data$permission_contactgp)
table(data$permission_contactgp)/nrow(data)*100
table(data$heart_fxn_clinic_name)
table(data$permission_contactgp)/nrow(data)*100
table(data$pre_about_q4___1)
table(data$pre_about_q5)
table(data$pre_about_q5)/nrow(data)*100
table(data$pre_about_q6)
table(data$pre_about_q6)/nrow(data)*100
table(data$pre_about_q7)
table(data$pre_about_q7)/nrow(data)*100
table(data$pre_about_q8)
table(data$pre_about_q8)/nrow(data)*100
table(data$pre_about_q9)
table(data$pre_about_q9)/nrow(data)*100
mean(data$pre_about_q10, na.rm = TRUE)
sd(data$pre_about_q10, na.rm = TRUE)
mean(data$pre_about_q11, na.rm = TRUE)
sd(data$pre_about_q11, na.rm = TRUE)
table(data$healthauthority)
table(data$healthauthority)/nrow(data)*100
table(data$hospitalsite)
table(data$hospitalsite)/nrow(data)*100
mean(data$weight_kg, na.rm = TRUE)
sd(data$weight_kg, na.rm = TRUE)
data$height[which(data$height > 100)] = data$height[which(data$height > 100)] / 100
mean(data$height, na.rm = TRUE)
sd(data$height, na.rm = TRUE)
table(data$ems_transport)
table(data$ems_transport)/nrow(data)*100
mean(data$lvef, na.rm = TRUE)
sd(data$lvef, na.rm = TRUE)
table(data$nyha)
table(data$nyha)/nrow(data)*100
table(data$heartrhythm)
table(data$heartrhythm)/nrow(data)*100
table(data$lbbb)
table(data$lbbb)/nrow(data)*100
mean(data$qrs_duration, na.rm = TRUE)
sd(data$qrs_duration, na.rm = TRUE)
library(tidyr)
bp_sep = separate(data.frame(data$bp),1, into = c("systolic","diastolic"), sep = "/", fill = "left")
data$bp_systolic = as.numeric(bp_sep$systolic)
data$bp_diastolic = as.numeric(bp_sep$diastolic)
data$bp_diastolic[which(data$bp_diastolic == "")] = NA
mean(data$bp_systolic, na.rm = TRUE)
sd(data$bp_systolic, na.rm = TRUE)
mean(data$bp_diastolic, na.rm = TRUE)
sd(data$bp_diastolic, na.rm = TRUE)
mean(data$qrs_duration, na.rm = TRUE)
sd(data$qrs_duration, na.rm = TRUE)
sum(is.na(data$bp_systolic))
data$heart_rate = as.numeric(data$heart_rate)
mean(data$heart_rate, na.rm = TRUE)
sd(data$heart_rate, na.rm = TRUE)
sum(is.na(data$heart_rate))
mean(data$oxygen_sat, na.rm = TRUE)
sd(data$oxygen_sat, na.rm = TRUE)
mean(data$resp_rate, na.rm = TRUE)
sd(data$resp_rate, na.rm = TRUE)
mean(data$cr_renal_fxn, na.rm = TRUE)
sd(data$cr_renal_fxn, na.rm = TRUE)
mean(data$egfr_renal, na.rm = TRUE)
sd(data$egfr_renal, na.rm = TRUE)
mean(data$hb_anemia, na.rm = TRUE)
sd(data$hb_anemia, na.rm = TRUE)
mean(data$na_sodium, na.rm = TRUE)
sd(data$na_sodium, na.rm = TRUE)
mean(data$k_potassium[-110], na.rm = TRUE)
sd(data$k_potassium[-110], na.rm = TRUE)
mean(data$urea, na.rm = TRUE)
sd(data$urea, na.rm = TRUE)
mean(data$glucose, na.rm = TRUE)
sd(data$glucose, na.rm = TRUE)
length(which(data$prev_hf_hosp == ""))
table(data$coronary_heart_disease)
table(data$coronary_heart_disease)/nrow(data)*100
table(data$previous_mi)
table(data$previous_mi)/nrow(data)*100
table(data$diabetes)
table(data$diabetes)/nrow(data)*100
table(data$hypertenison)
table(data$hypertenison)/nrow(data)*100
table(data$smoker)
table(data$smoker)/nrow(data)*100
table(data$copd)
table(data$copd)/nrow(data)*100
table(data$active_cancer)
table(data$active_cancer)/nrow(data)*100
table(data$acei_arb)
table(data$acei_arb)/nrow(data)*100
table(data$beta_blocker)
table(data$beta_blocker)/nrow(data)*100
table(data$aldosterone_antag)
table(data$aldosterone_antag)/nrow(data)*100
table(data$diuretics)
table(data$diuretics)/nrow(data)*100
table(data$pulm_congestion)
table(data$pulm_congestion)/nrow(data)*100
table(data$pleural_effusion)
table(data$pleural_effusion)/nrow(data)*100
data$bnp[156] = ""
data$bnp[157] = ""
data$bnp[168] = ""
data$bnp[179] = "846"
data$bnp[181] = "786"
data$bnp[182] = "149"
data$bnp[184] = "8055"
data$bnp[185] = "647"
data$bnp[192] = "11663"
data$bnp[242] = "28545"
data$bnp[281] = "595"
data$bnp = as.numeric(data$bnp)
mean(data$bnp, na.rm = TRUE)
sd(data$bnp, na.rm = TRUE)
sum(is.na(data$bnp))
length(which(data$troponin == ""))
mean(data$egfr_renal, na.rm = TRUE)
sd(data$egfr_renal, na.rm = TRUE)
length(data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)])
which(data$pre_healthcare_usage_q2[which(data$pre_healthcare_usage_q1 == 1)] == "")
length(data$pre_healthcare_usage_q4[which(data$pre_healthcare_usage_q3 == 1)])
which(data$pre_healthcare_usage_q4[which(data$pre_healthcare_usage_q3 == 1)] == "")
length(data$pre_healthcare_usage_q6[which(data$pre_healthcare_usage_q5 == 1)])
which(data$pre_healthcare_usage_q6[which(data$pre_healthcare_usage_q5 == 1)] == "")
length(which(data$pre_healthcare_usage_q7 == 1))
length(which(data$pre_healthcare_usage_q8a[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q8b[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q8c[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q8d[which(data$pre_healthcare_usage_q7 == 1)] == ""))
length(which(data$pre_healthcare_usage_q9 == 1))
length(which(data$pre_healthcare_usage_q10[which(data$pre_healthcare_usage_q9 == 1)] == ""))
length(which(data$pre_healthcare_usage_q11 == 1))
length(which(data$pre_healthcare_usage_q12g[which(data$pre_healthcare_usage_q11 == 1)] == ""))
length(which(data$pre_healthcare_usage_q13 == 1))
length(which(data$pre_healthcare_usage_q14f[which(data$pre_healthcare_usage_q13 == 1)] == ""))
apply(is.na.data.frame(data),2, sum)
sum(data$date_discharged == "")
apply(is.na.data.frame(data),2, sum)/375*100
108/375
76/375
77/375
78/375
79/375
80/375
74/375
81/375
table(data$pre_about_q9[which(data$pre_about_q8 == 1)])
data$pre_about_q9[which(data$pre_about_q8 == 1)]
length(data$pre_about_q9[which(data$pre_about_q8 == 1)])
79/375
78/37
78/375
131/375
113/375
77/375
95/375
81/375
apply(is.na.data.frame(data),2, sum)
sum(data$date_discharged == "")
sum(data$date_visit == "")
11/375
1/375
data$bnp[156] = ""
data$bnp[157] = ""
data$bnp[168] = ""
data$bnp[179] = "846"
data$bnp[181] = "786"
data$bnp[182] = "149"
data$bnp[184] = "8055"
data$bnp[185] = "647"
data$bnp[192] = "11663"
data$bnp[242] = "28545"
data$bnp[281] = "595"
data$bnp = as.numeric(data$bnp)
mean(data$bnp, na.rm = TRUE)
sd(data$bnp, na.rm = TRUE)
sum(is.na(data$bnp))
95/375
data = read.csv("../Downloads/baseline vars/datafile.csv")
data = data[which(data$final_assignment != 2), ]
dim(data)
data$gp_responsive_yesno
sum(is.na(data$gp_responsive_yesno))
285/375
data$bnp[156] = ""
data$bnp[157] = ""
data$bnp[168] = ""
data$bnp[179] = "846"
data$bnp[181] = "786"
data$bnp[182] = "149"
data$bnp[184] = "8055"
data$bnp[185] = "647"
data$bnp[192] = "11663"
data$bnp[242] = "28545"
data$bnp[281] = "595"
data$bnp = as.numeric(data$bnp)
mean(data$bnp, na.rm = TRUE)
sd(data$bnp, na.rm = TRUE)
sum(is.na(data$bnp))
sum(is.na(data$gp_responsive_yesno))
table(data$gp_responsive_yesno)
25/375
65/375
nrow(rhcdata)
# Chunk 1
library(stringr)
library(rpart)
setwd("~/../LX_Project/cart/tutorial2//")
# Chunk 2
rhcdata <- read.csv("rhc.csv") # load data
# add column for outcome Y: length of stay
# Y = date of discharge - study admission date
# Y = date of death - study admission date if date of discharge not available
rhcdata$Y <- rhcdata$dschdte - rhcdata$sadmdte
rhcdata$Y[is.na(rhcdata$Y)] <- rhcdata$dthdte[is.na(rhcdata$Y)] -
rhcdata$sadmdte[is.na(rhcdata$Y)]
# remove outcomes we are not examining in this example
rhcdata <- dplyr::select(rhcdata,
!c(dthdte, lstctdte, dschdte, death, t3d30, dth30, surv2md1))
# remove unnecessary and problematic variables
rhcdata <- dplyr::select(rhcdata,
!c(sadmdte, ptid, X, adld3p, urin1, cat2))
# convert all categorical variables to factors
factors <- c("cat1", "ca", "cardiohx", "chfhx", "dementhx", "psychhx",
"chrpulhx", "renalhx", "liverhx", "gibledhx", "malighx",
"immunhx", "transhx", "amihx", "sex", "dnr1", "ninsclas",
"resp", "card", "neuro", "gastr", "renal", "meta", "hema",
"seps", "trauma", "ortho", "race", "income")
rhcdata[factors] <- lapply(rhcdata[factors], as.factor)
# convert our treatment A (RHC vs. No RHC) to a binary variable
rhcdata$A <- ifelse(rhcdata$swang1 == "RHC", 1, 0)
rhcdata <- dplyr::select(rhcdata, !swang1)
# Categorize the variables to match with the original paper
rhcdata$age <- cut(rhcdata$age,breaks=c(-Inf, 50, 60, 70, 80, Inf),right=FALSE)
rhcdata$race <- factor(rhcdata$race, levels=c("white","black","other"))
rhcdata$sex <- as.factor(rhcdata$sex)
rhcdata$sex <- relevel(rhcdata$sex, ref = "Male")
rhcdata$cat1 <- as.factor(rhcdata$cat1)
levels(rhcdata$cat1) <- c("ARF","CHF","Other","Other","Other",
"Other","Other","MOSF","MOSF")
rhcdata$ca <- as.factor(rhcdata$ca)
levels(rhcdata$ca) <- c("Metastatic","None","Localized (Yes)")
rhcdata$ca <- factor(rhcdata$ca, levels=c("None",
"Localized (Yes)","Metastatic"))
# Rename variables
names(rhcdata) <- c("Disease.category", "Cancer", "Cardiovascular",
"Congestive.HF", "Dementia", "Psychiatric", "Pulmonary",
"Renal", "Hepatic", "GI.Bleed", "Tumor",
"Immunosupperssion", "Transfer.hx", "MI", "age", "sex",
"edu", "DASIndex", "APACHE.score", "Glasgow.Coma.Score",
"blood.pressure", "WBC", "Heart.rate", "Respiratory.rate",
"Temperature", "PaO2vs.FIO2", "Albumin", "Hematocrit",
"Bilirubin", "Creatinine", "Sodium", "Potassium", "PaCo2",
"PH", "Weight", "DNR.status", "Insurance",
"Respiratory.Diag", "Cardiovascular.Diag",
"Neurological.Diag", "Gastrointestinal.Diag", "Renal.Diag",
"Metabolic.Diag", "Hematologic.Diag", "Sepsis.Diag",
"Trauma.Diag", "Orthopedic.Diag", "race", "income",
"Y", "A")
levels(rhcdata$Insurance) = c("Medicaid", "Medicare", "M&M", "None", "Priv", "Priv&Medicare")
nrow(rhcdata)
```{}
rhcdata
```
# load functions
source("bagg.R")
setwd("~/../LX_Project/cart/")
# load functions
source("bagg.R")
bagg
sample(5735,  replace = TRUE)
sample(5735,  replace = TRUE)
sample(rhcdata,  replace = TRUE)
?sample
data_list = list()
temp = data.frame(a = c(0,1,2,3), b = c(11,12,13,14))
sample(temp, replace = TRUE)
sample(temp, replace = TRUE)
sample(temp, replace = TRUE)
sample(temp, replace = TRUE)
sample(temp, replace = TRUE)
sample(rhcdata,  replace = TRUE)
sample(5735,  replace = TRUE)
rhcdata[sample(5735,  replace = TRUE)]
rhcdata[sample(5735,  replace = TRUE), ]
i
i=1
data_list = list() # empty list to store bootstrap samples
for(i in 1:3){
data_list[[i]] = rhcdata[sample(5735,  replace = TRUE), ]
}
library(rpart)
tree_list = list() # empty list to store trees
tree_list[[i]] = rpart(formula = readmitted ~ ., minsplit = 40000, data = data_list[[i]], cp=-1)
data_list[[i]]
rhcdata$A
tree_list[[i]] = rpart(formula = Y ~ ., minsplit = 40000, data = data_list[[i]], cp=-1)
tree_list
tree_list[[i]] = rpart(formula = Y ~ ., minsplit = 10000, data = data_list[[i]], cp=-1)
tree_list
rpart(formula = Y ~ ., minsplit = 10000, data = data_list[[i]], cp=-1)
tree_list[[i]] = rpart(formula = Y ~ ., minsplit = 3000, data = data_list[[i]], cp=-1)
tree_list
rhcdata$i
i
tree_list
rpart::plotcp(tree_list[[3]])
plot(tree_list[[3]])
library(rpart)
tree_list = list() # empty list to store trees
for(i in 1:3){
tree_list[[i]] = rpart(formula = Y ~ ., minsplit = 3000, data = data_list[[i]], cp=-1)
}
tree_list
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(tree_list[[1]])
rpart(formula = Y ~ ., minsplit = 1000, data = data_list[[i]], cp=-1)
data = read.csv("~/../LX_Project/TEC4Home/baseline vars/datafile.csv")
data = data[which(data$final_assignment != 2), ]
dim(data)
sum(is.na(data$age))
mean(data$age, na.rm = TRUE)
data$support_required___1
data$support_at_home
which(data$support_at_home == 1)
length(which(data$support_at_home == 1))
length(which(data$support_at_home == 2))
